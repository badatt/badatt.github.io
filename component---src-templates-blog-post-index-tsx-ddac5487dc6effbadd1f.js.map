{"version":3,"sources":["webpack:///./src/components/ui/TitleSection/styles.ts","webpack:///./src/components/ui/TitleSection/index.tsx","webpack:///./src/components/utils/FormatHtml/index.tsx","webpack:///./src/templates/BlogPost/styles.ts","webpack:///./src/templates/BlogPost/index.tsx"],"names":["TitleSection","styled","div","withConfig","displayName","componentId","Title","h2","_ref","center","SubTitle","h4","_ref2","Separator","_ref3","title","subtitle","React","createElement","Styled","FormatHtml","className","content","dangerouslySetInnerHTML","__html","h3","figure","Links","BlogPost","data","pageContext","post","markdownRemark","previous","next","Layout","SEO","frontmatter","Container","section","date","html","Link","to","fields","slug","rel"],"mappings":"iIAOO,MAAMA,EAAeC,IAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,SAChC,sDAGOK,EAAQL,IAAOM,GAAEJ,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAATJ,CAAS,aACxB,mHACFO,IAAA,IAAC,OAAEC,GAAQD,EAAA,OAAKC,GAAY,uBAGnBC,EAAWT,IAAOU,GAAER,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAATJ,CAAS,aAC3B,mEACFW,IAAA,IAAC,OAAEH,GAAQG,EAAA,OAAKH,GAAY,uBAGnBI,EAAYZ,IAAOM,GAAEJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAATJ,CAAS,8DAC5B,6FACFa,IAAA,IAAC,OAAEL,GAAQK,EAAA,OAAKL,GAAY,wCAIxB,mFAKA,kGCdOT,IARuBQ,IAAA,IAAC,OAAEC,EAAM,MAAEM,EAAK,SAAEC,GAAUR,EAAA,OAChES,IAAAC,cAACC,EAAmB,KACjBH,GAAYC,IAAAC,cAACC,EAAe,CAACV,OAAQA,GAASM,GAC/CE,IAAAC,cAACC,EAAY,CAACV,OAAQA,GAASO,GAC/BC,IAAAC,cAACC,EAAgB,CAACV,OAAQA,O,oCCd9B,yBAgBeW,IATqBZ,IAAA,IAAC,UAAEa,EAAS,QAAGC,GAASd,EAAA,OAC1DS,IAAAC,cAAA,QACEG,UAAcA,EAAH,eACXE,wBAAyB,CACvBC,OAAQF,O,+JCROrB,IAAOwB,GAAEtB,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAATJ,CAAS,SACxB,wCAGeA,IAAOyB,OAAMvB,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAbJ,CAAa,SAC5B,+FALC,MAQM0B,EAAQ1B,IAAOC,IAAGC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAVJ,CAAU,SACzB,iFCqDS2B,UA/BmBpB,IAA2B,IAA1B,KAAEqB,EAAI,YAAEC,GAAatB,EACtD,MAAMuB,EAAOF,EAAKG,gBACZ,SAAEC,EAAQ,KAAEC,GAASJ,EAE3B,OACEb,IAAAC,cAACiB,IAAM,KACLlB,IAAAC,cAACkB,IAAG,CAACrB,MAAOgB,EAAKM,YAAYtB,QAC7BE,IAAAC,cAACoB,IAAS,CAACC,SAAO,GAChBtB,IAAAC,cAAClB,IAAY,CAACe,MAAOgB,EAAKM,YAAYG,KAAMxB,SAAUe,EAAKM,YAAYtB,QACvEE,IAAAC,cAACE,IAAU,CAACE,QAASS,EAAKU,OAC1BxB,IAAAC,cAACC,EAAY,KACXF,IAAAC,cAAA,YACGe,GACChB,IAAAC,cAACwB,IAAI,CAACC,GAAIV,EAASW,OAAOC,KAAMC,IAAI,YAAW,KAC1Cb,EAASI,YAAYtB,QAI9BE,IAAAC,cAAA,YACGgB,GACCjB,IAAAC,cAACwB,IAAI,CAACC,GAAIT,EAAKU,OAAOC,KAAMC,IAAI,QAC7BZ,EAAKG,YAAYtB,MAAM","file":"component---src-templates-blog-post-index-tsx-ddac5487dc6effbadd1f.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport interface StyledProps {\n  center?: boolean;\n}\n\nexport const TitleSection = styled.div`\n  ${tw`flex flex-col w-full`};\n`;\n\nexport const Title = styled.h2<StyledProps>`\n  ${tw`uppercase mb-4 text-lg font-bold w-full text-left`};\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const SubTitle = styled.h4<StyledProps>`\n  ${tw`text-xs text-indigo-600 w-full text-left`};\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const Separator = styled.h2<StyledProps>`\n  ${tw`relative w-2 h-8 mb-6 -mt-2`};\n  ${({ center }) => center && tw`mx-auto`};\n\n  &:before {\n    content: '';\n    ${tw`bg-indigo-500 h-full w-px absolute left-0`};\n  }\n\n  &:after {\n    content: '';\n    ${tw`bg-teal-400 h-6 w-px absolute ml-1`};\n  }\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\nimport { StyledProps } from './styles';\n\ninterface Props extends StyledProps {\n  title: string;\n  subtitle?: string;\n}\n\nconst TitleSection: React.FC<Props> = ({ center, title, subtitle }) => (\n  <Styled.TitleSection>\n    {subtitle && <Styled.SubTitle center={center}>{title}</Styled.SubTitle>}\n    <Styled.Title center={center}>{subtitle}</Styled.Title>\n    <Styled.Separator center={center} />\n  </Styled.TitleSection>\n);\n\nexport default TitleSection;\n","import React, { ReactNode } from 'react';\n\ninterface Props {\n  content: any;\n  className: string;\n}\n\nconst FormatHtml: React.FC<Props> = ({ className , content }) => (\n  <span\n    className={`${className} format-html`}\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nexport default FormatHtml;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\n`;\n\nexport const Links = styled.div`\n  ${tw`w-full flex justify-between mt-10`};\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport * as Styled from './styles';\n\ninterface Post {\n  html: React.ReactNode;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    date: string;\n  };\n}\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pageContext: {\n    slug: string;\n    next: Post;\n    previous: Post;\n  };\n}\n\nconst BlogPost: React.FC<Props> = ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n\n  return (\n    <Layout>\n      <SEO title={post.frontmatter.title} />\n      <Container section>\n        <TitleSection title={post.frontmatter.date} subtitle={post.frontmatter.title} />\n        <FormatHtml content={post.html} />\n        <Styled.Links>\n          <span>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"previous\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </span>\n          <span>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </span>\n        </Styled.Links>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}